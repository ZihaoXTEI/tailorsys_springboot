package com.xtei.tailorsys.model;

import lombok.Data;
import org.apache.ibatis.annotations.Mapper;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 *
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table users_tb
 */
@Data
public class User implements UserDetails {
    /**
     * 用户编号
     * 数据库列名：userid
     */
    private Integer userid;

    /**
     * 用户名称
     * 数据库列名：username
     */
    private String username;

    /**
     * 用户密码
     * 数据库列名：password
     */
    private String password;

    /**
     * 电子邮箱
     * 数据库列名：user_email
     */
    private String userEmail;

    /**
     * 手机号码
     * 数据库列名：user_phone
     */
    private String userPhone;

    /**
     * 用户状态
     * 数据库列名：user_status
     */
    private Boolean userStatus;

    /**
     * 用户角色
     * 数据库列名：user_role
     */
    private String userRole;

    /**
     * 注册时间
     * 数据库列名：registime
     */
    private Timestamp registime;

    public User(){}

    public User(String username, String password, String userEmail, String userPhone, boolean userStatus, String userRole, Timestamp regisTime) {
        this.username = username;
        this.password = password;
        this.userEmail = userEmail;
        this.userPhone = userPhone;
        this.userStatus = userStatus;
        this.userRole = userRole;
        this.registime = regisTime;
    }

    public User(int userId, String username, String password, String userEmail, String userPhone, boolean userStatus, String userRole, Timestamp regisTime) {
        this.userid = userId;
        this.username = username;
        this.password = password;
        this.userEmail = userEmail;
        this.userPhone = userPhone;
        this.userStatus = userStatus;
        this.userRole = userRole;
        this.registime = regisTime;
    }

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        List<GrantedAuthority> authorities = new ArrayList<>();
        authorities.add(new SimpleGrantedAuthority("ADMIN"));
        return authorities;
    }

    @Override
    public boolean isAccountNonExpired() {
        return true;
    }

    @Override
    public boolean isAccountNonLocked() {
        return true;
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return true;
    }

    @Override
    public boolean isEnabled() {
        return true;
    }

    public Timestamp getRegistime(){
        System.out.println(registime);
        return registime;
    }
}